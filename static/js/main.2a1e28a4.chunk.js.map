{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","goodsList","selectedGood","isIncludes","good","includes","this","setState","index","findIndex","pos","prevState","updatedList","splice","selectedItems","length","join","className","type","onClick","close","map","key","classNames","selected","option","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iSAIMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WA6FaC,E,4MAzFbC,MAAQ,CACNC,UAAW,GACXC,aAAc,O,EAGhBC,WAAa,SAAAC,GAAI,OAAI,EAAKJ,MAAMC,UAAUI,SAASD,I,2CAEnD,WACEE,KAAKC,SAAS,CAAEN,UAAW,O,oBAG7B,SAAOG,GACL,GAAIE,KAAKH,WAAWC,GAAO,CACzB,IAAMI,EAAQF,KAAKN,MAAMC,UAAUQ,WAAU,SAAAC,GAAG,OAAIA,IAAQN,KAE5DE,KAAKC,UAAS,SAACI,GACb,IAAMC,EAAW,YAAOD,EAAUV,WAIlC,OAFAW,EAAYC,OAAOL,EAAO,GAEnB,2BACFG,GADL,IACgBV,UAAWW,YAI7BN,KAAKC,UAAS,SAAAI,GAAS,kCAClBA,GADkB,IACPV,UAAU,GAAD,mBAAMU,EAAUV,WAAhB,CAA2BG,W,oBAKxD,WAAU,IAEJU,EAFG,OACCb,EAAcK,KAAKN,MAAnBC,UAaR,OARIa,EAFAb,EAAUc,OACa,IAArBd,EAAUc,OACC,UAAMd,EAAUe,KAAK,MAArB,gBAEA,UAAMf,EAAUe,KAAK,MAArB,iBAGC,oBAIhB,yBAAKC,UAAU,OACb,wBAAIA,UAAU,SACXH,EACD,4BACEI,KAAK,SACLD,UAAU,QACVE,QAAS,WACP,EAAKC,UAJT,MAUF,wBAAIH,UAAU,cACXnB,EAAgBuB,KAAI,SAAAjB,GAAI,OACvB,wBACEkB,IAAKlB,EACLa,UACEM,IAAW,oBAAD,OAAqBnB,GAC7B,CAAEoB,SAAU,EAAKrB,WAAWC,MAG/BA,EACD,4BACEc,KAAK,SACLD,UACEM,IAAW,uBACT,CAAE,eAAgB,EAAKpB,WAAWC,KAEtCe,QAAS,WACP,EAAKM,OAAOrB,KAGb,EAAKD,WAAWC,GAAQ,SAAW,iB,GAhFlCsB,IAAMC,WCbxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.2a1e28a4.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    goodsList: [],\n    selectedGood: 'Jam',\n  }\n\n  isIncludes = good => this.state.goodsList.includes(good)\n\n  close() {\n    this.setState({ goodsList: [] });\n  }\n\n  option(good) {\n    if (this.isIncludes(good)) {\n      const index = this.state.goodsList.findIndex(pos => pos === good);\n\n      this.setState((prevState) => {\n        const updatedList = [...prevState.goodsList];\n\n        updatedList.splice(index, 1);\n\n        return {\n          ...prevState, goodsList: updatedList,\n        };\n      });\n    } else {\n      this.setState(prevState => ({\n        ...prevState, goodsList: [...prevState.goodsList, good],\n      }));\n    }\n  }\n\n  render() {\n    const { goodsList } = this.state;\n    let selectedItems;\n\n    if (goodsList.length) {\n      if (goodsList.length === 1) {\n        selectedItems = `${goodsList.join(', ')} is selected`;\n      } else {\n        selectedItems = `${goodsList.join(', ')} are selected`;\n      }\n    } else {\n      selectedItems = 'No goods selected';\n    }\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"title\">\n          {selectedItems}\n          <button\n            type=\"button\"\n            className=\"close\"\n            onClick={() => {\n              this.close();\n            }}\n          >\n            X\n          </button>\n        </h1>\n        <ul className=\"goods-list\">\n          {goodsFromServer.map(good => (\n            <li\n              key={good}\n              className={\n                classNames(`goods-list__good ${good}`,\n                  { selected: this.isIncludes(good) })\n              }\n            >\n              {good}\n              <button\n                type=\"button\"\n                className={\n                  classNames('goods-list__good-btn',\n                    { 'selected-btn': this.isIncludes(good) })\n                  }\n                onClick={() => {\n                  this.option(good);\n                }}\n              >\n                {this.isIncludes(good) ? 'Remove' : 'Add'}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}